parameters:
  - name: gulpfile
    type: string
    default: "$(Build.SourcesDirectory)/gulpfile.js"
  - name: publishArtifactName  # artifact name for publish task
    type: string
  - name: packageOffline
    type: boolean
    default: true

steps:
  - task: UseNode@1
    displayName: "Use Node 18.x"
    inputs:
      version: 18.x

  - pwsh: |
      Write-Host "Installing Yarn"
      npm install --global yarn@1.22.19
      Write-Host "Installing Gulp CLI"
      npm install --global gulp-cli@2.3.0
      Write-Host "Installing VSCE"
      npm install --global vsce@2.9.2
    displayName: Install toolchain

  - pwsh: |
      yarn --frozen-lockfile
    displayName: Install extension depedencies
    workingDirectory: "$(Build.SourcesDirectory)"

  - task: gulp@1
    displayName: Build extension
    inputs:
      targets: build
      gulpFile: ${{ parameters.gulpfile }}
    env:
      BUILDMACHINE: true

  - task: gulp@1
    displayName: Lint code
    inputs:
      targets: lint
      gulpFile: ${{ parameters.gulpfile }}

  - task: gulp@1
    displayName: Run tests and compute coverage
    inputs:
      targets: test:cover --log
      gulpFile: ${{ parameters.gulpfile }}

  - task: DockerInstaller@0
    displayName: Installing Docker
    inputs:
      dockerVersion: 17.09.0-ce
      releaseType: stable

  - script: docker pull mcr.microsoft.com/mssql/server:2022-latest
    displayName: Pull MSSQL Docker Image

  - script: |
      set -e
      VS_CODE_VERSION_NAME=insiders
      SERVER_NAME=localhost
      AUTHENTICATION_TYPE=SQL Login
      USER_NAME=sa
      PASSWORD=$(cat /dev/urandom | tr -dc 'A-Za-z0-9_!@#$%^&*()-+=' | head -c24)
      SAVE_PASSWORD=No
      PROFILE_NAME=test-server
    displayName: Setup environment variables for smoke tests

  - script: 'docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=$(PASSWORD)" -e "MSSQL_AGENT_ENABLED=True" -p 1433:1433 --name sql1 -h sql1 -d mcr.microsoft.com/mssql/server:2022-latest'
    displayName: Starting Server in Docker Container

  - task: gulp@1
    displayName: Run Smoke tests
    inputs:
      targets: ext:smoke
      gulpFile: ${{ parameters.gulpfile }}

  - task: PublishTestResults@2
    displayName: Publish test results
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '$(Build.SourcesDirectory)/test-reports/test-results-ext.xml'
    condition: succeededOrFailed()

  - task: gulp@1
    displayName: Process test coverage
    inputs:
      targets: cover
      gulpFile: ${{ parameters.gulpfile }}

  - task: gulp@1
    displayName: Package (online)
    inputs:
      targets: package:online
      gulpFile: ${{ parameters.gulpfile }}

  - task: gulp@1
    displayName: Package (offline)
    condition: eq( ${{ parameters.packageOffline }}, 'true')
    inputs:
      targets: package:offline
      gulpFile: ${{ parameters.gulpfile }}

  # using CopyFiles to isolate all .vsix packages because PublishPipelineArtifact can't use wildcards
  - task: CopyFiles@2
    displayName: 'Copy VSIXs to clean folder'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: '*.vsix'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/vsix'

  - task: PublishPipelineArtifact@1
    displayName: Publish artifacts
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/vsix'
      artifact: ${{ parameters.publishArtifactName }}