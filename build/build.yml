pool:
  vmImage: "macOS-10.15"

steps:
  - task: NodeTool@0
    displayName: "Use Node 14.x"
    inputs:
      versionSpec: 14.X

  - task: geeklearningio.gl-vsts-tasks-yarn.yarn-task.Yarn@3
    displayName: Install dependencies
    inputs:
      arguments: "--frozen-lockfile"

  - task: geeklearningio.gl-vsts-tasks-yarn.yarn-task.Yarn@3
    displayName: Install gulp-cli
    inputs:
      arguments: "global add gulp-cli@2.3.0"

  - bash: |
      export BUILDMACHINE=true
      node node_modules/gulp/bin/gulp.js build --gulpfile $(Build.SourcesDirectory)/gulpfile.js
    displayName: "gulp build"

  - bash: "gulp lint"
    displayName: "gulp lint"

  - bash: "gulp test:cover"
    displayName: "gulp test:cover"

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: 'test-reports/test-results-ext.xml'
    condition: succeededOrFailed()

  - bash: "gulp cover:combine-json"
    displayName: "gulp cover:combine-json"

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml
      additionalCodeCoverageFiles: $(System.DefaultWorkingDirectory)/coverage/coverage.json

  - task: geeklearningio.gl-vsts-tasks-yarn.yarn-task.Yarn@3
    displayName: Install vsce
    inputs:
      arguments: "global add vsce@2.9.2"

  - task: gulp@0
    displayName: "gulp package:offline"
    inputs:
      targets: "package:offline"

  - task: gulp@0
    displayName: "gulp package:online"
    inputs:
      targets: "package:online"

  - task: CopyFiles@2
    displayName: "Copy VSIXs to artifacts directory"
    inputs:
      SourceFolder: "$(Build.SourcesDirectory)"
      Contents: "*.vsix"
      TargetFolder: "$(Build.ArtifactStagingDirectory)"

  - task: geeklearningio.gl-vsts-tasks-yarn.yarn-task.Yarn@3
    displayName: Install ads-adal-library dependencies
    inputs:
      projectDirectory: $(Build.SourcesDirectory)/lib/ads-adal-library
      arguments: --frozen-lockfile

  - task: geeklearningio.gl-vsts-tasks-yarn.yarn-task.Yarn@3
    displayName: Build ads-adal-library
    inputs:
      projectDirectory: $(Build.SourcesDirectory)/lib/ads-adal-library
      arguments: build

  - task: Npm@1
    displayName: Package ads-adal-library
    inputs:
      command: custom
      customCommand: pack
      workingDir: $(Build.SourcesDirectory)/lib/ads-adal-library

  - task: CopyFiles@2
    displayName: "Copy ads-adal-library package to artifacts directory"
    inputs:
      SourceFolder: $(Build.SourcesDirectory)/lib/ads-adal-library
      Contents: "*.tgz"
      TargetFolder: $(Build.ArtifactStagingDirectory)

  - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
    displayName: 'SBOM Generation Task'
    inputs:
      BuildDropPath: '$(Build.ArtifactStagingDirectory)'
      PackageName: 'MSSQL for VS Code'

  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifact: drop"

  - script: |
      brew update
      brew install --cask visual-studio-code
    displayName: "Install VS Code for testing"

  - task: gulp@0
    displayName: "gulp ext:install-service"
    inputs:
      targets: "ext:install-service"

  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: "Component Detection"
    inputs:
      failOnAlert: true
