{
  "name": "mssql",
  "displayName": "mssql",
  "version": "1.0.0",
  "description": "Develop Microsoft SQL Server, Azure SQL Database and SQL Data Warehouse everywhere",
  "publisher": "ms-mssql",
  "preview": false,
  "license": "SEE LICENSE IN LICENSE.txt",
  "aiKey": "AIF-5574968e-856d-40d2-af67-c89a14e76412",
  "icon": "images/sqlserver.png",
  "galleryBanner": {
    "color": "#2F2F2F",
    "theme": "dark"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Microsoft/vscode-mssql.git"
  },
  "bugs": {
    "url": "https://github.com/Microsoft/vscode-mssql/issues"
  },
  "homepage": "https://github.com/Microsoft/vscode-mssql/blob/master/README.md",
  "engines": {
    "vscode": "^1.9.0"
  },
  "categories": [
    "Languages"
  ],
  "keywords": [
    "SQL",
    "MSSQL",
    "SQL Server",
    "Azure SQL Database",
    "Azure SQL Data Warehouse"
  ],
  "activationEvents": [
    "onLanguage:sql",
    "onCommand:extension.connect",
    "onCommand:extension.runQuery",
    "onCommand:extension.disconnect",
    "onCommand:extension.manageProfiles",
    "onCommand:extension.chooseDatabase",
    "onCommand:extension.cancelQuery",
    "onCommand:extension.showGettingStarted",
    "onCommand:extension.newQuery",
    "onCommand:extension.rebuildIntelliSenseCache"
  ],
  "main": "./out/src/extension",
  "extensionDependencies": [
    "vscode.sql"
  ],
  "devDependencies": {
    "chai": "^3.5.0",
    "coveralls": "^2.11.15",
    "decache": "^4.1.0",
    "del": "^2.2.1",
    "gulp": "github:gulpjs/gulp#4.0",
    "gulp-clean-css": "^2.0.13",
    "gulp-concat": "^2.6.0",
    "gulp-filter": "^5.0.0",
    "gulp-install": "^0.6.0",
    "gulp-istanbul-report": "0.0.1",
    "gulp-json-editor": "^2.2.1",
    "gulp-remote-src": "0.4.1",
    "gulp-rename": "^1.2.2",
    "gulp-shell": "^0.5.2",
    "gulp-sourcemaps": "^1.6.0",
    "gulp-tslint": "^6.0.2",
    "gulp-typescript": "^3.1.4",
    "gulp-uglify": "^2.0.0",
    "istanbul": "^0.4.5",
    "jasmine-core": "~2.4.1",
    "karma": "^1.3.0",
    "karma-chrome-launcher": "^2.0.0",
    "karma-coverage": "^1.1.1",
    "karma-htmlfile-reporter": "^0.3.4",
    "karma-jasmine": "^1.0.2",
    "karma-jasmine-html-reporter": "^0.2.2",
    "karma-junit-reporter": "^1.1.0",
    "karma-remap-istanbul": "^0.2.1",
    "pm-mocha-jenkins-reporter": "^0.2.6",
    "remap-istanbul": "^0.6.4",
    "systemjs-builder": "^0.15.32",
    "tslint": "^3.14.0",
    "typemoq": "^0.3.2",
    "typescript": "^2.1.5",
    "uglify-js": "mishoo/UglifyJS2#harmony-v2.8.22",
    "vscode": "^1.0.5",
    "vscode-nls-dev": "https://github.com/Raymondd/vscode-nls-dev/releases/download/2.0.2/build.tar.gz",
    "xmldom": "^0.1.27",
    "yargs": "https://registry.npmjs.org/yargs/-/yargs-3.32.0.tgz"
  },
  "dependencies": {
    "applicationinsights": "^0.15.9",
    "body-parser": "^1.15.2",
    "comment-json": "^1.1.3",
    "copy-paste": "^1.3.0",
    "decompress": "^4.0.0",
    "ejs": "^2.4.2",
    "error-ex": "^1.3.0",
    "express": "^4.13.3",
    "figures": "^1.4.0",
    "fs-extra-promise": "^0.3.1",
    "getmac": "1.2.1",
    "http-proxy-agent": "^1.0.0",
    "https-proxy-agent": "^1.0.0",
    "opener": "1.4.2",
    "pretty-data": "^0.40.0",
    "request": "^2.73.0",
    "tmp": "^0.0.28",
    "underscore": "^1.8.3",
    "vscode-extension-telemetry": "^0.0.5",
    "vscode-languageclient": "^2.5.0",
    "vscode-nls": "^2.0.2",
    "ws": "^1.1.1"
  },
  "contributes": {
    "languages": [
      {
        "id": "sql",
        "extensions": [
          ".sql"
        ],
        "aliases": [
          "SQL"
        ],
        "configuration": "./syntaxes/sql.configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "sql",
        "scopeName": "source.sql",
        "path": "./syntaxes/SQL.plist"
      }
    ],
    "outputChannels": [
      "MSSQL"
    ],
    "snippets": [
      {
        "language": "sql",
        "path": "./snippets/mssql.json"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "extension.runQuery",
          "when": "editorLangId == sql"
        }
      ]
    },
    "commands": [
      {
        "command": "extension.runQuery",
        "title": "Execute Query",
        "category": "MS SQL"
      },
      {
        "command": "extension.cancelQuery",
        "title": "Cancel Query",
        "category": "MS SQL"
      },
      {
        "command": "extension.connect",
        "title": "Connect",
        "category": "MS SQL"
      },
      {
        "command": "extension.disconnect",
        "title": "Disconnect",
        "category": "MS SQL"
      },
      {
        "command": "extension.manageProfiles",
        "title": "Manage Connection Profiles",
        "category": "MS SQL"
      },
      {
        "command": "extension.chooseDatabase",
        "title": "Use Database",
        "category": "MS SQL"
      },
      {
        "command": "extension.showGettingStarted",
        "title": "Getting Started Guide",
        "category": "MS SQL"
      },
      {
        "command": "extension.newQuery",
        "title": "New Query",
        "category": "MS SQL"
      },
      {
        "command": "extension.rebuildIntelliSenseCache",
        "title": "Refresh IntelliSense Cache",
        "category": "MS SQL"
      }
    ],
    "keybindings": [
      {
        "command": "extension.runQuery",
        "key": "ctrl+shift+e",
        "mac": "cmd+shift+e",
        "when": "editorTextFocus && editorLangId == 'sql'"
      },
      {
        "command": "extension.connect",
        "key": "ctrl+shift+c",
        "mac": "cmd+shift+c",
        "when": "editorTextFocus && editorLangId == 'sql'"
      },
      {
        "command": "extension.disconnect",
        "key": "ctrl+shift+d",
        "mac": "cmd+shift+d",
        "when": "editorTextFocus && editorLangId == 'sql'"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "MSSQL configuration",
      "properties": {
        "mssql.logDebugInfo": {
          "type": "boolean",
          "default": false,
          "description": "[Optional] Log debug output to the VS Code console (Help -> Toggle Developer Tools)"
        },
        "mssql.maxRecentConnections": {
          "type": "number",
          "default": 5,
          "description": "The maximum number of recently used connections to store in the connection list."
        },
        "mssql.connections": {
          "type": "array",
          "default": [
            {
              "server": "{{put-server-name-here}}",
              "database": "{{put-database-name-here}}",
              "user": "{{put-username-here}}",
              "password": "{{put-password-here}}"
            }
          ],
          "description": "Connection profiles defined in 'User Settings' are shown under 'MS SQL: Connect' command in the command palette.",
          "items": {
            "type": "object",
            "properties": {
              "server": {
                "type": "string",
                "default": "{{put-server-name-here}}",
                "description": "[Required] Specify the server name to connect to. Use 'hostname\\instance' or '<server>.database.windows.net' for Azure SQL Database."
              },
              "database": {
                "type": "string",
                "default": "{{put-database-name-here}}",
                "description": "[Optional] Specify the database name to connect to. If database is not specified, the default user database setting is used, typically 'master'."
              },
              "user": {
                "type": "string",
                "default": "{{put-username-here}}",
                "description": "[Optional] Specify the user name for SQL Server authentication. If user name is not specified, when you connect, you will be asked again."
              },
              "password": {
                "type": "string",
                "default": "{{put-password-here}}",
                "description": "[Optional] Specify the password for SQL Server authentication. If password is not specified or already saved, when you connect, you will be asked again."
              },
              "authenticationType": {
                "type": "string",
                "default": "SqlLogin",
                "enum": [
                  "Integrated",
                  "SqlLogin",
                  "AzureMFA"
                ],
                "description": "[Optional] Specify the SQL Server authentication type."
              },
              "port": {
                "type": "number",
                "default": 1433,
                "description": "[Optional] Specify the port number to connect to."
              },
              "encrypt": {
                "type": "boolean",
                "default": false,
                "description": "[Optional] When set to 'true', SQL Server uses SSL encryption for data sent between the client and the server if the server has a certificate installed. Set 'true' for Azure SQL Database connection."
              },
              "trustServerCertificate": {
                "type": "boolean",
                "default": false,
                "description": "[Optional] When set to 'true', the SQL Server SSL certificate is automatically trusted when the communication layer is encrypted using SSL. Set 'false' for Azure SQL Database connection."
              },
              "persistSecurityInfo": {
                "type": "boolean",
                "default": false,
                "description": "[Optional] When set to false, security-sensitive information, such as the password, is not returned as part of the connection if the connection is open or has ever been in an open state."
              },
              "connectTimeout": {
                "type": "number",
                "default": 15,
                "description": "[Optional] Specify the length of time in seconds to wait for a connection to the server before it times out. The default timeout value for Azure SQL Database is 30."
              },
              "connectRetryCount": {
                "type": "number",
                "default": 1,
                "description": "[Optional] Specify the number of attempts to restore connection."
              },
              "connectRetryInterval": {
                "type": "number",
                "default": 10,
                "description": "[Optional] Specify the delay between attempts to restore connection."
              },
              "applicationName": {
                "type": "string",
                "default": "vscode-mssql",
                "description": "[Optional] Specify the name of the application used for SQL Server to log (default: 'vscode-mssql')."
              },
              "workstationId": {
                "type": "string",
                "default": "",
                "description": "[Optional] Specify the name of the workstation connecting to SQL Server."
              },
              "applicationIntent": {
                "type": "string",
                "default": "ReadWrite",
                "enum": [
                  "ReadWrite",
                  "ReadOnly"
                ],
                "description": "[Optional] Declares the application workload type when connecting to SQL Server such as ReadWrite or ReadOnly. Refer to SQL Server AlwaysOn for more detail."
              },
              "currentLanguage": {
                "type": "string",
                "default": "",
                "description": "[Optional] Indicates the SQL Server language settings."
              },
              "pooling": {
                "type": "boolean",
                "default": false,
                "description": "[Optional] When set to 'true', the connection object is drawn from the appropriate pool, or if necessary, is created and added to the appropriate pool."
              },
              "maxPoolSize": {
                "type": "number",
                "default": 100,
                "description": "[Optional] Specify the maximum number of connections allowed in the pool."
              },
              "minPoolSize": {
                "type": "number",
                "default": 0,
                "description": "[Optional] Specify the minimum number of connections allowed in the pool."
              },
              "loadBalanceTimeout": {
                "type": "number",
                "default": 0,
                "description": "[Optional] Specify the minimum amount of time in seconds for this connection to live in the pool before being removed/deleted."
              },
              "replication": {
                "type": "boolean",
                "default": true,
                "description": "[Optional] Used by SQL Server in replication."
              },
              "attachDbFilename": {
                "type": "string",
                "default": "",
                "description": "[Optional] Specify the name of the primary file, including the full path name, of an attachable database."
              },
              "failoverPartner": {
                "type": "string",
                "default": "",
                "description": "[Optional] Specify the name or network address of the instance of SQL Server that acts as a failover partner."
              },
              "multiSubnetFailover": {
                "type": "boolean",
                "default": true,
                "description": "[Optional] When set to 'true', the detection and connection to the active server is faster if AlwaysOn Availability Group is configured on different subnets."
              },
              "multipleActiveResultSets": {
                "type": "boolean",
                "default": false,
                "description": "[Optional] When set to 'true', multiple result sets can be returned and read from on connection."
              },
              "packetSize": {
                "type": "number",
                "default": 8192,
                "description": "[Optional] Specify the size in bytes of the network packets to communicate with SQL Server."
              },
              "typeSystemVersion": {
                "type": "string",
                "enum": [
                  "Latest"
                ],
                "description": "[Optional] Indicates which server type the provider will expose through the DataReader."
              },
              "connectionString": {
                "type": "string",
                "default": "",
                "description": "[Optional] The ADO.NET connection string to use for the connection. Overrides any other options given in this connection."
              },
              "profileName": {
                "type": "string",
                "description": "[Optional] Specify a custom name for this connection profile to easily browse and search in the command palette of Visual Studio Code."
              },
              "savePassword": {
                "type": "boolean",
                "description": "[Optional] When set to 'true', the password for SQL Server authentication is saved in the secure store of your operating system such as KeyChain in MacOS or Secure Store in Windows."
              },
              "emptyPasswordInput": {
                "type": "boolean",
                "description": "[Optional] Indicates whether this profile has an empty password explicitly set."
              }
            }
          }
        },
        "mssql.shortcuts": {
          "type": "object",
          "description": "Shortcuts related to the results window",
          "default": {
            "_comment": "Short cuts must follow the format (ctrl)+(shift)+(alt)+[key]",
            "event.toggleResultPane": "ctrl+alt+r",
            "event.toggleMessagePane": "ctrl+alt+y",
            "event.prevGrid": "ctrl+up",
            "event.nextGrid": "ctrl+down",
            "event.copySelection": "ctrl+c",
            "event.copyWithHeaders": "",
            "event.maximizeGrid": "",
            "event.selectAll": "",
            "event.saveAsJSON": "",
            "event.saveAsCSV": "",
            "event.saveAsExcel": ""
          }
        },
        "mssql.messagesDefaultOpen": {
          "type": "boolean",
          "description": "True for the messages pane to be open by default; false for closed",
          "default": true
        },
        "mssql.resultsFontFamily": {
          "type": "string",
          "description": "Set the font family for the results grid; set to blank to use the editor font",
          "default": "-apple-system,BlinkMacSystemFont,Segoe WPC,Segoe UI,HelveticaNeue-Light,Ubuntu,Droid Sans,sans-serif"
        },
        "mssql.resultsFontSize": {
          "type": "number",
          "description": "Set the font size for the results grid; set to blank to use the editor size",
          "default": 13
        },
        "mssql.saveAsCsv.includeHeaders": {
          "type": "boolean",
          "description": "[Optional] When true, column headers are included when saving results as CSV",
          "default": true
        },
        "mssql.copyIncludeHeaders": {
          "type": "boolean",
          "description": "[Optional] Configuration options for copying results from the Results View",
          "default": false
        },
        "mssql.copyRemoveNewLine": {
          "type": "boolean",
          "description": "[Optional] Configuration options for copying multi-line results from the Results View",
          "default": true
        },
        "mssql.splitPaneSelection": {
          "type": "string",
          "description": "[Optional] Configuration options for which column new result panes should open in",
          "default": "next",
          "enum": [
            "next",
            "current",
            "end"
          ]
        },
        "mssql.format.alignColumnDefinitionsInColumns": {
          "type": "boolean",
          "description": "Should column definitions be aligned?",
          "default": false
        },
        "mssql.format.datatypeCasing": {
          "type": "string",
          "description": "Should data types be formatted as UPPERCASE, lowercase, or none (not formatted)",
          "default": "none",
          "enum": [
            "none",
            "uppercase",
            "lowercase"
          ]
        },
        "mssql.format.keywordCasing": {
          "type": "string",
          "description": "Should keywords be formatted as UPPERCASE, lowercase, or none (not formatted)",
          "default": "none",
          "enum": [
            "none",
            "uppercase",
            "lowercase"
          ]
        },
        "mssql.format.placeCommasBeforeNextStatement": {
          "type": "boolean",
          "description": "should commas be placed at the beginning of each statement in a list e.g. ', mycolumn2' instead of at the end e.g. 'mycolumn1,'",
          "default": false
        },
        "mssql.format.placeSelectStatementReferencesOnNewLine": {
          "type": "boolean",
          "description": "Should references to objects in a select statements be split into separate lines? E.g. for 'SELECT C1, C2 FROM T1' both C1 and C2 will be on separate lines",
          "default": false
        },
        "mssql.applyLocalization": {
          "type": "boolean",
          "description": "[Optional] Configuration options for localizing into VSCode's configured locale (must restart VSCode for settings to take effect)",
          "default": false
        },
        "mssql.query.displayBitAsNumber": {
          "type": "boolean",
          "default": true,
          "description": "Should BIT columns be displayed as numbers (1 or 0)? If false, BIT columns will be displayed as 'true' or 'false'"
        },
        "mssql.intelliSense.enableIntelliSense": {
          "type": "boolean",
          "default": true,
          "description": "Should IntelliSense be enabled"
        },
        "mssql.intelliSense.enableErrorChecking": {
          "type": "boolean",
          "default": true,
          "description": "Should IntelliSense error checking be enabled"
        },
        "mssql.intelliSense.enableSuggestions": {
          "type": "boolean",
          "default": true,
          "description": "Should IntelliSense suggestions be enabled"
        },
        "mssql.intelliSense.enableQuickInfo": {
          "type": "boolean",
          "default": true,
          "description": "Should IntelliSense quick info be enabled"
        },
        "mssql.intelliSense.lowerCaseSuggestions": {
          "type": "boolean",
          "default": false,
          "description": "Should IntelliSense suggestions be lowercase"
        }
      }
    }
  },
  "scripts": {
    "postinstall": "node ./node_modules/vscode/bin/install",
    "install-packages": "npm install github:gulpjs/gulp#4.0 && npm install gulp-install && gulp --gulpfile install.js install"
  }
}
